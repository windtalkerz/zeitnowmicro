{"version":3,"sources":["example.test.js"],"names":["micro","require","test","listen","request","t","service","req","res","send","url","body","deepEqual","JSON","parse","close"],"mappings":";;AACA;;AAEA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,OAAOD,QAAQ,KAAR,CAAb;AACA,MAAME,SAASF,QAAQ,aAAR,CAAf;AACA,MAAMG,UAAUH,QAAQ,iBAAR,CAAhB;;AAEAC,KAAK,aAAL,EAAoB,MAAMG,CAAN,IAAW;AAC3B,UAAMC,UAAUN,MAAM,OAAOO,GAAP,EAAYC,GAAZ,KAAoB;AACtCR,cAAMS,IAAN,CAAWD,GAAX,EAAgB,GAAhB,EAAqB;AACjBN,kBAAM;AADW,SAArB;AAGH,KAJe,CAAhB;;AAMA,UAAMQ,MAAM,MAAMP,OAAOG,OAAP,CAAlB;AACA,UAAMK,OAAO,MAAMP,QAAQM,GAAR,CAAnB;;AAEAL,MAAEO,SAAF,CAAYC,KAAKC,KAAL,CAAWH,IAAX,EAAiBT,IAA7B,EAAmC,MAAnC;AACAI,YAAQS,KAAR;AACH,CAZD","file":"example.test.js","sourcesContent":["\n// https://github.com/zeit/micro\n\nconst micro = require('micro')\nconst test = require('ava')\nconst listen = require('test-listen')\nconst request = require('request-promise')\n\ntest('my endpoint', async t => {\n    const service = micro(async (req, res) => {\n        micro.send(res, 200, {\n            test: 'woot'\n        })\n    })\n\n    const url = await listen(service)\n    const body = await request(url)\n\n    t.deepEqual(JSON.parse(body).test, 'woot')\n    service.close()\n})"]}