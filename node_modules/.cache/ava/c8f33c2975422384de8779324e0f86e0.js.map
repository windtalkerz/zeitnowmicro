{"version":3,"sources":["characters.test.js"],"names":["micro","require","test","request","axios","t","mario","url","character","JSON","parse","deepEqual"],"mappings":";;AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,OAAOD,QAAQ,KAAR,CAAb;AACA,MAAME,UAAUF,QAAQ,iBAAR,CAAhB;AACA,MAAMG,QAAQH,QAAQ,OAAR,CAAd;;AAKAC,KAAK,0DAAL,EAAiE,MAAMG,CAAN,IAAW;;AAExE,UAAMC,QAAQ;AACV,eAAO,0BADG;AAEV,gBAAQ,OAFE;AAGV,iBAAS,MAHC;AAIV,iBAAS;AAJC,KAAd;;AASA,UAAMC,MAAM,qEAAZ,CAXwE,CAWU;;AAElF,UAAM,EAAEC,SAAF,KAAgBC,KAAKC,KAAL,EAAW,MAAMP,QAAQI,GAAR,CAAjB,EAAtB;AACA;AACAF,MAAEM,SAAF,CAAYH,SAAZ,EAAuBF,KAAvB;AAEH,CAjBD","file":"characters.test.js","sourcesContent":["const micro = require('micro')\nconst test = require('ava')\nconst request = require('request-promise')\nconst axios = require(\"axios\")\n\n\n\n\ntest(\"https://micro.supermario.io/api/get/characters.lambda.js\", async t => {\n\n    const mario = {\n        \"_id\": \"5c054977627966094cd725fe\",\n        \"name\": \"mario\",\n        \"color\": \"red1\",\n        \"skill\": \"jumpNrun\"\n    }\n\n\n\n    const url = \"https://micro.supermario.io/api/get/characters.lambda.js?name=mario\" //await listen(service)\n\n    const { character } = JSON.parse(await request(url))\n    //const result = await (await axios.get(`${url}/?name=mario`, { name: \"peach\" })).data\n    t.deepEqual(character, mario)\n\n})"]}